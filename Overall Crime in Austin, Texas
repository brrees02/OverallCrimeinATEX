{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "46e3b446-43f2-48fd-882d-9ea93d6e660d",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "d7e947ea-643b-4bce-bcad-e000b0bb30a0",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "crime_rate = pd.read_csv(\"Crime_Reports.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "82daef23-23b3-4271-a801-66fcbb0f48c0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Incident Number   Highest Offense Description  Highest Offense Code  \\\n",
      "0        20183652244                DEADLY CONDUCT                   408   \n",
      "1        20183652210       POSSESSION OF MARIJUANA                  1803   \n",
      "2        20183652175            FAMILY DISTURBANCE                  3400   \n",
      "3        20183652213           ASSAULT WITH INJURY                   900   \n",
      "4        20183652141            DATING DISTURBANCE                  2400   \n",
      "..               ...                           ...                   ...   \n",
      "995      20183610395        BURGLARY NON RESIDENCE                   502   \n",
      "996      20188005124           BURGLARY OF VEHICLE                   601   \n",
      "997      20183610191            DATING DISTURBANCE                  2400   \n",
      "998      20183610189   AGG ASLT STRANGLE/SUFFOCATE                   410   \n",
      "999      20183610164  POSS CONTROLLED SUB/NARCOTIC                  1800   \n",
      "\n",
      "    Family Violence Occurred Date Time Occurred Date  Occurred Time  \\\n",
      "0                 N   12/31/2018 23:54    12/31/2018           2354   \n",
      "1                 N   12/31/2018 23:46    12/31/2018           2346   \n",
      "2                 N   12/31/2018 23:32    12/31/2018           2332   \n",
      "3                 N   12/31/2018 23:25    12/31/2018           2325   \n",
      "4                 N   12/31/2018 23:20    12/31/2018           2320   \n",
      "..              ...                ...           ...            ...   \n",
      "995               N    12/27/2018 4:20    12/27/2018            420   \n",
      "996               N    12/27/2018 4:00    12/27/2018            400   \n",
      "997               N    12/27/2018 3:52    12/27/2018            352   \n",
      "998               Y    12/27/2018 3:43    12/27/2018            343   \n",
      "999               N    12/27/2018 3:26    12/27/2018            326   \n",
      "\n",
      "     Report Date Time Report Date  Report Time  ... Category Description  \\\n",
      "0    12/31/2018 23:54  12/31/2018         2354  ...   Aggravated Assault   \n",
      "1    12/31/2018 23:46  12/31/2018         2346  ...                  NaN   \n",
      "2    12/31/2018 23:32  12/31/2018         2332  ...                  NaN   \n",
      "3    12/31/2018 23:44  12/31/2018         2344  ...                  NaN   \n",
      "4    12/31/2018 23:47  12/31/2018         2347  ...                  NaN   \n",
      "..                ...         ...          ...  ...                  ...   \n",
      "995   12/27/2018 8:24  12/27/2018          824  ...             Burglary   \n",
      "996  12/27/2018 16:19  12/27/2018         1619  ...                Theft   \n",
      "997   12/27/2018 3:52  12/27/2018          352  ...                  NaN   \n",
      "998   12/27/2018 6:28  12/27/2018          628  ...   Aggravated Assault   \n",
      "999   12/27/2018 5:02  12/27/2018          502  ...                  NaN   \n",
      "\n",
      "    X-coordinate  Y-coordinate   Latitude  Longitude  \\\n",
      "0      3125119.0    10097121.0  30.339849 -97.706614   \n",
      "1      3110935.0    10085658.0  30.309252 -97.752409   \n",
      "2      3082798.0    10114943.0  30.391518 -97.839473   \n",
      "3      3132666.0    10090638.0  30.321537 -97.683187   \n",
      "4      3108259.0    10072481.0  30.273201 -97.761852   \n",
      "..           ...           ...        ...        ...   \n",
      "995    3096524.0    10034766.0  30.170268 -97.801736   \n",
      "996    3152032.0    10100639.0  30.347744 -97.621053   \n",
      "997    3115179.0    10107897.0  30.370112 -97.737319   \n",
      "998    3115554.0    10066686.0  30.256806 -97.739177   \n",
      "999    3128708.0    10068504.0  30.260953 -97.697390   \n",
      "\n",
      "                        Location  Zip Codes  Single Member Council Districts  \\\n",
      "0    (30.33984938, -97.70661436)     3641.0                              4.0   \n",
      "1    (30.30925215, -97.75240883)     3247.0                             10.0   \n",
      "2    (30.39151787, -97.83947264)     3246.0                             10.0   \n",
      "3     (30.3215366, -97.68318656)     3239.0                              1.0   \n",
      "4    (30.27320084, -97.76185205)     2858.0                              9.0   \n",
      "..                           ...        ...                              ...   \n",
      "995  (30.17026772, -97.80173567)     3637.0                              5.0   \n",
      "996  (30.34774406, -97.62105308)     3643.0                              1.0   \n",
      "997  (30.37011248, -97.73731866)     3645.0                              7.0   \n",
      "998  (30.25680559, -97.73917706)     2856.0                              9.0   \n",
      "999  (30.26095281, -97.69738974)     2857.0                              3.0   \n",
      "\n",
      "    BOUNDARIES_single_member_districts Zoning Review Cases_data  \n",
      "0                                  9.0                      NaN  \n",
      "1                                  5.0                      NaN  \n",
      "2                                  5.0                   2665.0  \n",
      "3                                  8.0                      NaN  \n",
      "4                                 10.0                    442.0  \n",
      "..                                 ...                      ...  \n",
      "995                                1.0                    826.0  \n",
      "996                                8.0                      NaN  \n",
      "997                                7.0                      NaN  \n",
      "998                               10.0                   2117.0  \n",
      "999                                3.0                      NaN  \n",
      "\n",
      "[1000 rows x 31 columns]\n"
     ]
    }
   ],
   "source": [
    "print(crime_rate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "af5d970f-d8d5-457e-926d-6aa1c99d91d5",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "73311f3e-e3ea-406f-abe8-ee26605297bd",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.DataFrame(crime_rate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "0103754d-97c3-44fc-a2d7-58ce75368fa8",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = list(df.iloc[:, 22])\n",
    "Y = list(df.iloc[:, 23])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "f8e89eec-b8b7-49df-8103-a59bc087a10d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zip Code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>78741.0</th>\n",
       "      <td>86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78701.0</th>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78758.0</th>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78753.0</th>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78745.0</th>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78704.0</th>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78702.0</th>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78744.0</th>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78723.0</th>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78759.0</th>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78748.0</th>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78751.0</th>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78757.0</th>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78752.0</th>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78721.0</th>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78729.0</th>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78724.0</th>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78750.0</th>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78727.0</th>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78746.0</th>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78754.0</th>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78705.0</th>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78749.0</th>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78722.0</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78731.0</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Zip Code\n",
       "78741.0        86\n",
       "78701.0        75\n",
       "78758.0        68\n",
       "78753.0        67\n",
       "78745.0        63\n",
       "78704.0        61\n",
       "78702.0        61\n",
       "78744.0        58\n",
       "78723.0        48\n",
       "78759.0        44\n",
       "78748.0        42\n",
       "78751.0        31\n",
       "78757.0        27\n",
       "78752.0        24\n",
       "78721.0        21\n",
       "78729.0        21\n",
       "78724.0        21\n",
       "78750.0        17\n",
       "78727.0        15\n",
       "78746.0        14\n",
       "78754.0        13\n",
       "78705.0        12\n",
       "78749.0        11\n",
       "78722.0        10\n",
       "78731.0         9"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "crime_counts = df[\"Zip Code\"].value_counts().head(25).to_frame()\n",
    "display(crime_counts)\n",
    "plt.figure(figsize=(8, 4), dpi=100)\n",
    "df[\"Zip Code\"].value_counts().head(25).plot.bar(rot=60)\n",
    "plt.title(\"Overall Crime For the Days of 12-27 to 12-31 in Austin Texas, (2018)\")\n",
    "plt.xlabel(\"Zip Code\")\n",
    "plt.ylabel(\"Number of Crimes\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "0fbeeaba-7625-43ec-9bc1-6a64b278a7ec",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "e38c1921-0645-4b66-9072-d4ea71ac6ef6",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1000 entries, 0 to 999\n",
      "Data columns (total 31 columns):\n",
      " #   Column                              Non-Null Count  Dtype  \n",
      "---  ------                              --------------  -----  \n",
      " 0   Incident Number                     1000 non-null   int64  \n",
      " 1   Highest Offense Description         1000 non-null   object \n",
      " 2   Highest Offense Code                1000 non-null   int64  \n",
      " 3   Family Violence                     1000 non-null   object \n",
      " 4   Occurred Date Time                  1000 non-null   object \n",
      " 5   Occurred Date                       1000 non-null   object \n",
      " 6   Occurred Time                       1000 non-null   int64  \n",
      " 7   Report Date Time                    1000 non-null   object \n",
      " 8   Report Date                         1000 non-null   object \n",
      " 9   Report Time                         1000 non-null   int64  \n",
      " 10  Location Type                       991 non-null    object \n",
      " 11  Address                             1000 non-null   object \n",
      " 12  Zip Code                            997 non-null    float64\n",
      " 13  Council District                    993 non-null    float64\n",
      " 14  APD Sector                          1000 non-null   object \n",
      " 15  APD District                        1000 non-null   object \n",
      " 16  PRA                                 999 non-null    float64\n",
      " 17  Census Tract                        992 non-null    float64\n",
      " 18  Clearance Status                    881 non-null    object \n",
      " 19  Clearance Date                      881 non-null    object \n",
      " 20  UCR Category                        340 non-null    object \n",
      " 21  Category Description                340 non-null    object \n",
      " 22  X-coordinate                        999 non-null    float64\n",
      " 23  Y-coordinate                        999 non-null    float64\n",
      " 24  Latitude                            987 non-null    float64\n",
      " 25  Longitude                           987 non-null    float64\n",
      " 26  Location                            987 non-null    object \n",
      " 27  Zip Codes                           987 non-null    float64\n",
      " 28  Single Member Council Districts     984 non-null    float64\n",
      " 29  BOUNDARIES_single_member_districts  984 non-null    float64\n",
      " 30  Zoning Review Cases_data            504 non-null    float64\n",
      "dtypes: float64(12), int64(4), object(15)\n",
      "memory usage: 242.3+ KB\n"
     ]
    }
   ],
   "source": [
    "crime_rate.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6ceaeb0b-56e0-4d8d-b0c4-8e468906c6a9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
